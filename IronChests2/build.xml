<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
                                                            

     mod_IronChest    
     Bigger chests
                   
     cpw                                                                
     ====================================================================== -->
<project name="mod_IronChests" default="build">
  <description>
            Iron Chests
    </description>
  <macrodef name="side">
    <attribute name="prop" />
    <attribute name="src" />
    <attribute name="side" />
    <sequential>
      <property name="@{prop}" value="${@{side}.@{src}}" />
      <condition property="is.client">
        <equals arg1="@{side}" arg2="client" />
      </condition>
      <condition property="is.server">
        <equals arg1="@{side}" arg2="server" />
      </condition>
    </sequential>
  </macrodef>

  <target name="init">
    <tstamp>
      <format pattern="yyMMddHHmmss" property="timestamp" />
    </tstamp>
    <property environment="env" />
    <property name="modname" value="mod_ironchests" />
    <property name="version.major" value="3" />
    <property name="version.minor" value="3" />
    <property name="version.rev" value="1" />
    <condition property="version.build" value="${env.BUILD_NUMBER}" else="0">
      <isset property="env.BUILD_NUMBER" />
    </condition>
    <property name="version" value="${version.major}.${version.minor}.${version.rev}.${version.build}" />
    <condition property="mcdev.home" value="${env.WORKSPACE}" else="/home/cpw/projects/mcworkspace">
      <isset property="env.WORKSPACE" />
    </condition>
    <condition property="mcp.home" value="${env.WORKSPACE}/mcpworkspace" else="${mcdev.home}/forge70">
      <isset property="env.WORKSPACE" />
    </condition>
  	<condition property="ext.batch" value="bat" else="sh">
  	  <os family="windows" />
  	</condition>
    <property name="mcp.obfoutput" location="${mcp.home}/reobf" />
    <property name="client.mcp.obfoutput" location="${mcp.obfoutput}/minecraft" />
    <property name="server.mcp.obfoutput" location="${mcp.obfoutput}/minecraft_server" />
    <property name="mcp.srcdir" location="${mcp.home}/src" />
    <property name="client.mcp.srcdir" location="${mcp.srcdir}/minecraft" />
    <property name="server.mcp.srcdir" location="${mcp.srcdir}/minecraft_server" />
    <property name="deploy.dir" location="${user.home}/.minecraft/mods" />
    <property name="common.src.dir" location="${basedir}/common" />
    <property name="client.src.dir" location="${basedir}/client" />
    <property name="server.src.dir" location="${basedir}/server" />
    <property name="resource.dir" location="${basedir}/resources" />
    <property name="mfuploader.script" location="/home/cpw/mfuploader.py" />
  	<property name="bukkitporting.dir" location="${env.WORKSPACE}/../BukkitPorting" />
  	<property name="bukkitporting.srgtools" location="${bukkitporting.dir}/bin/SrgTools.jar" />
  	<property name="bukkitporting.asm" location="${bukkitporting.dir}/bin/asm-all-3.3.1.jar" />
  	<property name="bukkitporting.translatedjar" location="${bukkitporting.dir}/jar/generated/craftbukkit-1.2.5-R1.1-MCPC-SNAPSHOT-73.MCP.jar" />
  	<property name="bukkitporting.srg" location="${bukkitporting.dir}/mappings/generated/server_bukkit_mcp_1.2.5.srg" />
  </target>
  <target name="clean">
    <antcall target="clean-source">
      <param name="side" value="client" />
    </antcall>
    <antcall target="clean-source">
      <param name="side" value="server" />
    </antcall>
    <exec executable="${mcp.home}/updatemd5.${ext.batch}" dir="${mcp.home}">
      <arg value="-f" />
    </exec>
  </target>

  <target name="build-client" depends="init,clean,merge-client,buildandreobfmcp">
    <antcall target="extract-built-jar">
      <param name="side" value="client" />
    </antcall>
  </target>

  <target name="build-server" depends="init,clean,merge-server,buildandreobfmcp">
    <antcall target="extract-built-jar">
      <param name="side" value="server" />
    </antcall>
  </target>
	
  <target name="clean-bukkit">
  	<delete dir="build/bukkit/" />
  	<delete dir="build/bukkit-jar/" />
  </target>
  <target name="compile-bukkit" depends="init">
  	<mkdir dir="build/bukkit/" />
  	<javac target="1.6" srcdir="${server.src.dir}:${common.src.dir}" destdir="build/bukkit/" classpath="${bukkitporting.dir}/jar/generated/craftbukkit-1.2.5-R1.1-MCPC-SNAPSHOT-73.MCP.jar" />
  </target>
  <target name="jar-bukkit" depends="init,compile-bukkit">
	<mkdir dir="build/bukkit-jar/" />
  	<jar destfile="build/bukkit-jar/${modname}-bukkit-${version}-pretranslate.zip" basedir="build/bukkit/" />
  </target>
  <target name="translate-bukkit" depends="init,jar-bukkit">
    <mkdir dir="${basedir}/target" />
  	<java classname="nl.hardijzer.fw.applysrg.ApplySrg" failonerror="true" fork="true">
  	  <classpath>
  	    <pathelement location="${bukkitporting.asm}" />
  	    <pathelement location="${bukkitporting.srgtools}" />
  	  </classpath>
  	  <arg value="--srg" />
  	  <arg value="${bukkitporting.srg}" />
  	  <arg value="--inheritance" />
	  <arg value="${bukkitporting.translatedjar}" />
  	  <arg value="--inheritance" />
  	  <arg value="build/bukkit-jar/${modname}-bukkit-${version}-pretranslate.zip" />
      <arg value="--in" />
      <arg value="build/bukkit-jar/${modname}-bukkit-${version}-pretranslate.zip" />
  	  <arg value="--out" />
  	  <arg value="${basedir}/target/${modname}-bukkit-${version}.zip" />
  	</java>
  </target>
  
	
  <target name="build-bukkit" depends="init,clean-bukkit,translate-bukkit">

  </target>

  <target name="extract-built-jar">
    <side prop="output" src="mcp.obfoutput" side="${side}" />
    <property name="jarname" value="${modname}-${side}-${version}" />
    <mkdir dir="${basedir}/target" />
    <jar destfile="${basedir}/target/${jarname}.zip">
      <fileset dir="${output}" includes="**/*.class" />
      <fileset dir="${resource.dir}" erroronmissingdir="false">
        <selector if="is.client">
          <filename name="**/*.png" />
        </selector>
      </fileset>
    </jar>
  </target>

  <target name="build" depends="merge-client,merge-server,build-client,build-server,build-bukkit" />

  <target name="uploadartifacts" depends="build,domfupload"/>

  <target name="domfupload" depends="-checkmfupload" if="${mfuploader.can.run}">
    <property name="uploaddir" value="${modname}-${version}" />
    <exec executable="/usr/bin/python">
      	<arg value="${mfuploader.script}"/>
    	<arg value="${uploaddir}"/>
	  	<arg value="${basedir}/target/${modname}-client-${version}.zip"/>
	  	<arg value="${basedir}/target/${modname}-server-${version}.zip"/>
    </exec>
  </target>
  
  <target name="-checkmfupload" unless="mfuploader.can.run">
    <available property="mfuploader.can.run" file="${mfuploader.script}"/>
  </target>
  
  <target name="buildandclean" depends="build">
    <antcall target="clean" />
  </target>

  <!-- antcall target to merge source to a side -->
  <target name="clean-source">
    <side prop="delete-targ" src="mcp.srcdir" side="${side}" />
    <side prop="side-from" src="src.dir" side="${side}" />
    <delete verbose="true">
      <fileset dir="${delete-targ}">
        <present present="both" targetdir="${side-from}" />
      </fileset>
      <fileset dir="${delete-targ}">
        <present present="both" targetdir="${common.src.dir}" />
      </fileset>
    </delete>
  </target>

  <target name="merge-source">
    <side prop="merge-to" src="mcp.srcdir" side="${side}" />
    <side prop="side-from" src="src.dir" side="${side}" />

    <copy todir="${merge-to}" overwrite="true" verbose="true">
      <fileset dir="${side-from}" includes="**/*.java" />
      <fileset dir="${common.src.dir}" includes="**/*.java" />
      <filterchain>
        <replacetokens>
          <token key="MAJOR" value="${version.major}" />
          <token key="MINOR" value="${version.minor}" />
          <token key="REV" value="${version.rev}" />
          <token key="BUILD" value="${version.build}" />
        </replacetokens>
      </filterchain>
    </copy>
  </target>

  <target name="merge-client" depends="init,clean">
    <antcall target="merge-source">
      <param name="side" value="client" />
    </antcall>
  </target>

  <target name="merge-server" depends="init,clean">
    <antcall target="merge-source">
      <param name="side" value="server" />
    </antcall>
  </target>

  <target name="buildandreobfmcp" depends="init">
    <exec executable="${mcp.home}/recompile.sh" dir="${mcp.home}" />
    <exec executable="${mcp.home}/reobfuscate.sh" dir="${mcp.home}" />
  </target>

  <target name="deploy" depends="init,build-client">
    <property name="jarname" value="${modname}-client-${version}" />
    <move file="${deploy.dir}/${jarname}.zip" tofile="${deploy.dir}/${jarname}.zip.${timestamp}" failonerror="false" verbose="true" />
    <copy file="${basedir}/${jarname}.zip" todir="${deploy.dir}" verbose="true" />
  </target>
</project>
